#
# To enable inferno in c-icap, copy this file in the c-icap
# configuration directory and add the following line at the end of
# c-icap.conf file:
#    Include srv_inferno.conf
#

# Module: srv_inferno
# Description:
#	This is an implementation of the InFeRno porn detection and
#	elimination system. For more information, see:
#   * http://www.cs.uoi.gr/tech_reports/publications/TR-2011-09.pdf
#	* https://github.com/ntarmos/InFeRno
#
# Example:
#	Service inferno srv_inferno.so

# TAG: inferno.RedirectionLimit
# Format: inferno.RedirectionLimit <integer>
# Description:
#	Sets an upper limit on the number of redirection hops (301/302) to
#	follow when downloading items from the web. A value of 0 removes the
#	limitation altogether.
# Default:
#	inferno.RedirectionLimit 10
# Example:
#	inferno.RedirectionLimit 20

# TAG: inferno.ConnectTimeout
# Format: inferno.ConnectTimeout <integer>
# Description:
#	Sets an upper limit on the amount of time (in seconds) to wait for
#	connect(2) system calls to succeed. A value of 0 removes the
#	limitation altogether (i.e., wait for as long as the default of the
#	system network stack).
# Default:
#	inferno.ConnectTimeout 10
# Example:
#	inferno.ConnectTimeout 20

# TAG: inferno.LowSpeedLimit
# Format: inferno.LowSpeedLimit <integer> <integer>
# Description:
#	Sets a lower limit on the transfer speed (in Bytes/sec) in the first
#	integer, over a period of seconds equal to the second integer, to
#	wait before deeming the connection inactive and aborting the
#	transfer. A value of 0 for the speed limit removes the limitation
#	altogether.
# Default:
#	inferno.LowSpeedLimit 100 5
#	(i.e., 100 Bytes/sec, for 5'')
# Example:
#	inferno.LowSpeedLimit 0 0

# TAG: inferno.MaxConcurrentTransfers
# Format: inferno.MaxConcurrentTransfers <integer>
# Description:
#	Sets an upper limit on the number of threads that download data from
#	the web at any time. A value of 0 removes the limitation altogether
#	(i.e., download as many items as required/possible by the threading
#	model).
# Default:
#	inferno.MaxConcurrentTransfers 40
# Example:
#	inferno.MaxConcurrentTransfers 10

# TAG: inferno.PollInterval
# Format: inferno.PollInterval <integer>
# Description:
#   Amount of time (in microseconds) to wait between successive polls
#   for pending database items.
# Default:
#	inferno.PollInterval 200000
# Example:
#	inferno.PollInterval 500000

# TAG: inferno.CacheDir
# Format: inferno.CacheDir <path>
# Description:
#	Sets the path to the cache directory, where downloaded data will be
#	stored. This can be a disk-backed storage, if persistence across
#	reboots is required, or a ram/swap-backed storage for higher
#	performance. In the latter case, please also remember to clear the
#	cache when shutting down the server, or prior to starting it back
#	up.
# Default:
#	inferno.CacheDir /tmp/inferno
# Example:
#	inferno.CacheDir /var/tmp/inferno

# TAG: inferno.AcceptanceThreshold
# Format: inferno.AcceptanceThreshold <proportion>
# Description:
# Sets the proportion of benign and/or porn images that is allowed to be
# viewed in web pages.
#
# Default:
#	inferno.AcceptanceThreshold 0.4
# Example:
#	inferno.AcceptanceThreshold 0.5

# TAG: inferno.FilteringMode
# Format: inferno.FilteringMode <mode>
# Description:
# Sets the filtering mode in which inferno should operate in.
# Set <mode> to 0 if you require page-wide classification; set it to 1
# if you want image-level classification; set it to 2 for a mixed mode
# in which you have image-level classification/blurring in page mode
#
# Default:
#    inferno.FilteringMode 0
# Example:
#    inferno.FilteringMode 1

# TAG: inferno.CacheDB
# Format: inferno.CacheDB <db host> <db table> <db uname> <db passwd>
# Description:
#	Sets the information required by InFeRno to connect to the cache
#	database.
#	<db host>:   The host on which the database service hosting the
#	             cache is running (e.g., localhost)
#   <db base>:   The name of the database on said host where InFeRno is
#                to write cache data.
#   <db table>:  The name of the table where cache data are to be
#                stored. This table must be in the schema described in
#                doc/schema.sql.
#   <db uname>:  The name of a user with SELECT/INSERT/UPDATE privileges
#                on the above table and host.
#   <db passwd>: The password of said user.
# Default:
#	inferno.CacheDB localhost inferno cache usr_inferno <passwd>
# Example:
#	inferno.CacheDB somehost somedb sometbl someuser somepass

# End module: srv_inferno
